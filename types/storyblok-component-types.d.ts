// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface AtomIconTitlePairStoryblok {
  name: string;
  icon: string;
  iconSize?: string;
  component: "atomIconTitlePair";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      id?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "story";
      target?: "_self" | "_blank";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      url?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "asset" | "url";
      target?: "_self" | "_blank";
      [k: string]: any;
    }
  | {
      email?: string;
      linktype?: "email";
      target?: "_self" | "_blank";
      [k: string]: any;
    };

export interface AtomSingleButtonLinkStoryblok {
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  displayText?: string;
  buttonStyle?: number | string;
  launchInductionModal?: boolean;
  component: "atomSingleButtonLink";
  _uid: string;
  [k: string]: any;
}

export interface AtomSingleLinkStoryblok {
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  displayText?: string;
  component: "atomSingleLink";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface ContentRichTextStoryblok {
  richText: RichtextStoryblok;
  component: "contentRichText";
  _uid: string;
  [k: string]: any;
}

export interface ContentSingleButtonsStoryblok {
  links?: AtomSingleButtonLinkStoryblok[];
  component: "contentSingleButtons";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt?: string;
  copyright?: string;
  id: number;
  filename: string;
  name: string;
  title?: string;
  focus?: string;
  [k: string]: any;
}

export interface ContentSingleMediaStoryblok {
  media: AssetStoryblok;
  component: "contentSingleMedia";
  _uid: string;
  [k: string]: any;
}

export interface ContentWhyChooseUsStoryblok {
  component: "contentWhyChooseUs";
  _uid: string;
  [k: string]: any;
}

export interface DataDiscountedParkingOptionStoryblok {
  time?: string;
  cost?: string;
  component: "dataDiscountedParkingOption";
  _uid: string;
  [k: string]: any;
}

export interface MetaSiteOptionsStoryblok {
  telephone?: string;
  email?: string;
  navigation?: AtomSingleLinkStoryblok[];
  discountedParking?: DataDiscountedParkingOptionStoryblok[];
  defaultWhy: AtomIconTitlePairStoryblok[];
  membershipsFrom?: string;
  component: "metaSiteOptions";
  _uid: string;
  [k: string]: any;
}

export interface SectionFlexibleBlockStoryblok {
  backgroundStyle: number | string;
  browHeading?: string;
  browHeadingLevel: number | string;
  mainHeading?: string;
  mainHeadingLevel?: number | string;
  secondaryBlock?: (
    | ContentRichTextStoryblok
    | ContentSingleButtonsStoryblok
    | ContentSingleMediaStoryblok
    | ContentWhyChooseUsStoryblok
  )[];
  tertiaryBlock: AssetStoryblok;
  quarternaryBlock?: (
    | ContentRichTextStoryblok
    | ContentSingleButtonsStoryblok
    | ContentSingleMediaStoryblok
    | ContentWhyChooseUsStoryblok
  )[];
  component: "sectionFlexibleBlock";
  _uid: string;
  [k: string]: any;
}

export interface SectionGoogleReviewsStoryblok {
  component: "sectionGoogleReviews";
  _uid: string;
  [k: string]: any;
}

export interface SectionIconListStoryblok {
  title?: string;
  icons?: AtomIconTitlePairStoryblok[];
  component: "sectionIconList";
  _uid: string;
  [k: string]: any;
}

export type MultiassetStoryblok = {
  alt?: string;
  copyright?: string;
  id: number;
  filename: string;
  name: string;
  title?: string;
  [k: string]: any;
}[];

export interface SectionTextWithImageStoryblok {
  block: (
    | ContentRichTextStoryblok
    | ContentSingleButtonsStoryblok
    | ContentSingleMediaStoryblok
    | ContentWhyChooseUsStoryblok
  )[];
  media: MultiassetStoryblok;
  component: "sectionTextWithImage";
  _uid: string;
  [k: string]: any;
}

export interface TemplateHomepageStoryblok {
  brow?: string;
  primary?: string;
  secondary?: string;
  body?: (
    | SectionFlexibleBlockStoryblok
    | SectionGoogleReviewsStoryblok
    | SectionIconListStoryblok
    | SectionTextWithImageStoryblok
  )[];
  media: MultiassetStoryblok;
  component: "templateHomepage";
  _uid: string;
  [k: string]: any;
}

export interface TemplatePageStoryblok {
  body?: (
    | SectionFlexibleBlockStoryblok
    | SectionGoogleReviewsStoryblok
    | SectionIconListStoryblok
    | SectionTextWithImageStoryblok
  )[];
  brow?: string;
  primary?: string;
  secondary?: string;
  media: MultiassetStoryblok;
  component: "templatePage";
  _uid: string;
  [k: string]: any;
}
